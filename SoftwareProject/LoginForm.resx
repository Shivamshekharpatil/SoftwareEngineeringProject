<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>